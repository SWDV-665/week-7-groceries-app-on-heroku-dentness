{"version":3,"sources":["webpack:///./src/app/grocerylist/grocerylist.module.ts","webpack:///./src/app/grocerylist/grocerylist.page.html","webpack:///./src/app/grocerylist/grocerylist.page.scss","webpack:///./src/app/grocerylist/grocerylist.page.ts","webpack:///./src/services/groceries.service.ts","webpack:///./src/services/input-dialog.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA6C;AACE;AACN;AACM;AACF;AACQ;AAWrD;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe,EAAE,CAAC,CAAC;aAClE;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AChB9B,sFAAsF,OAAO,scAAsc,4FAA4F,WAAW,qCAAqC,UAAU,kxB;;;;;;;;;;;ACAzrB,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;ACAvB;AACsB;AACI;AACK;AACR;AAO/D;IAOI,yBACmB,OAAsB,EACrB,eAAgC,EACjC,gBAAkC,EAClC,mBAAuC,EACtC,aAA4B;QALhD,iBAUC;QATkB,YAAO,GAAP,OAAO,CAAe;QACrB,oBAAe,GAAf,eAAe,CAAiB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAoB;QACtC,kBAAa,GAAb,aAAa,CAAe;QAVhD,UAAK,GAAG,eAAe,CAAC;QACxB,UAAK,GAAa,EAAE,CAAC;QAUjB,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,WAAoB;YACzD,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,iEAAiE;IACjE,wCAAc,GAAd;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,mBAAmB;IAEnB,mCAAS,GAAT;QAAA,iBAMC;QALG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,SAAS,CACtC,eAAK,IAAI,YAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,EAC3B,eAAK,IAAI,YAAI,CAAC,YAAY,GAAG,KAAY,EAAhC,CAAgC,CAC5C,CAAC;QACF,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,iCAAO,GAAP;QACI,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,EAAE,CAAC;IACxD,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAI,EAAE,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,mCAAS,GAAT,UAAU,IAAI;QAAd,iBAWC;QAVG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAM,GAAG,GAAG,uBAAuB,GAAG,IAAI,CAAC,IAAI,GAAG,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC;QAC7E,IAAM,OAAO,GAAG,wBAAwB,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;YACxC,KAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,KAAK,CAAC;YACL,KAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,oCAAU,GAAV,UAAW,IAAI,EAAE,KAAK;QAClB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEK,sCAAY,GAAlB,UAAmB,GAAG;;;;;4BACJ,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC5C,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,IAAI;4BACd,QAAQ,EAAE,KAAK;yBAClB,CAAC;;wBAJI,KAAK,GAAG,SAIZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACnB;IAtEQ,eAAe;QAL3B,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,2GAAoC;;SAEvC,CAAC;+EAS8B,4DAAa;YACJ,8DAAe;YACf,4EAAgB;YACb,iFAAkB;YACvB,8EAAa;OAZvC,eAAe,CAuE3B;IAAD,sBAAC;CAAA;AAvE2B;;;;;;;;;;;;;;;;;;;;;ACXa;AACO;AACP;AACM;AAK/C;IASI,0BAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHnC,yCAAyC;QACzC,YAAO,GAAG,+CAA+C,CAAC;QAGtD,IAAI,CAAC,iBAAiB,GAAG,IAAI,4CAAO,EAAW,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAC9D,CAAC;IAED,mCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,IAAI,CAC5D,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;IACN,CAAC;IAEO,sCAAW,GAAnB,UAAoB,KAAqB;QACrC,IAAI,MAAc,CAAC;QACnB,IAAI,KAAK,YAAY,QAAQ,EAAE;YAC3B,IAAM,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC;YACxB,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,GAAK,CAAC;SACjE;aAAM;YACH,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SAC7D;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,+CAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,qCAAU,GAAV,UAAW,IAAI;QAAf,iBAKC;QAJG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;YACnE,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,qCAAU,GAAV,UAAW,EAAE,EAAE,OAAO;QAAtB,iBAIC;QAHG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,EAAE,EAAE,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YAClG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAO,GAAP,UAAQ,QAAQ,EAAE,QAAQ;QAA1B,iBAKC;QAHG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YACtF,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAlDQ,gBAAgB;QAH5B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAU2B,+DAAU;OAT1B,gBAAgB,CAmD5B;IAAD,uBAAC;CAAA;AAnD4B;;;;;;;;;;;;;;;;;;;;ACRuB;AACI;AACH;AAKrD;IAEI,4BAAmB,eAAgC,EAChC,gBAAkC;QADlC,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;IACrD,CAAC;IAEK,qDAAwB,GAA9B,UAA+B,IAAK,EAAE,KAAM;;;;;;4BAC1B,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC5C,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,kBAAkB;4BACvD,MAAM,EAAE;gCACJ;oCACI,IAAI,EAAE,UAAU;oCAChB,IAAI,EAAE,MAAM;oCACZ,WAAW,EAAE,MAAM;oCACnB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;iCACjC;gCACD;oCACI,IAAI,EAAE,UAAU;oCAChB,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,UAAU;oCACvB,GAAG,EAAE,CAAC;oCACN,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;iCAChC;6BACJ;4BACD,OAAO,EAAE;gCACL;oCACI,IAAI,EAAE,QAAQ;oCACd,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,WAAW;oCACrB,OAAO,EAAE;wCACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oCAClC,CAAC;iCACJ,EAAE;oCACC,IAAI,EAAE,MAAM;oCACZ,OAAO,EAAE,UAAC,IAAI;wCACV,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;wCAC1B,IAAI,KAAK,KAAK,SAAS,EAAE;4CACrB,KAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;yCACzF;6CAAM;4CACH,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;yCAC/D;oCACL,CAAC;iCACJ;6BACJ;yBACJ,CAAC;;wBArCI,KAAK,GAAG,SAqCZ;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACzB;IA/CQ,kBAAkB;QAH9B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAGsC,8DAAe;YACd,mEAAgB;OAH5C,kBAAkB,CAiD9B;IAAD,yBAAC;CAAA;AAjD8B","file":"grocerylist-grocerylist-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GrocerylistPage } from './grocerylist.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: GrocerylistPage }])\n  ],\n  declarations: [GrocerylistPage]\n})\nexport class GrocerylistModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>\\n            {{title}}\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ion-fab (click)=\\\"addItem()\\\" vertical=\\\"top\\\" horizontal=\\\"end\\\" edge=\\\"true\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button>\\n            <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n\\n    <h3 text-center *ngIf=\\\"items.length === 0\\\">No items in your list.</h3>\\n\\n    <ion-list>\\n        <ion-item-sliding *ngFor=\\\"let item of items; let i = index\\\">\\n            <ion-item>\\n                <div>\\n                    <h2>{{item.name}}</h2>\\n                    <p>Qty: {{item.qty}}</p>\\n                </div>\\n            </ion-item>\\n            <ion-item-options side=\\\"end\\\">\\n                <ion-item-option (click)=\\\"editItem(item, i)\\\" color=\\\"primary\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"create\\\"></ion-icon>\\n                </ion-item-option>\\n                <ion-item-option (click)=\\\"shareItem(item)\\\" color=\\\"light\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"share\\\"></ion-icon>\\n                </ion-item-option>\\n                <ion-item-option (click)=\\\"removeItem(item, i)\\\" color=\\\"danger\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n                </ion-item-option>\\n            </ion-item-options>\\n        </ion-item-sliding>\\n\\n\\n    </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb2NlcnlsaXN0L2dyb2NlcnlsaXN0LnBhZ2Uuc2NzcyJ9 */\"","import {Component} from '@angular/core';\nimport {NavController, ToastController} from '@ionic/angular';\nimport {GroceriesService} from '../../services/groceries.service';\nimport {InputDialogService} from '../../services/input-dialog.service';\nimport {SocialSharing} from '@ionic-native/social-sharing/ngx';\n\n@Component({\n    selector: 'app-grocieries',\n    templateUrl: 'grocerylist.page.html',\n    styleUrls: ['grocerylist.page.scss']\n})\nexport class GrocerylistPage {\n\n    title = 'Grocery Listz';\n    items: object[] = [];\n    errorMessage: string;\n\n\n    constructor(\n                public navCtrl: NavController,\n                private toastController: ToastController,\n                public groceriesService: GroceriesService,\n                public inputDialogServices: InputDialogService,\n                private socialSharing: SocialSharing) {\n        groceriesService.dataChanged$.subscribe((dataChanged: boolean) => {\n            this.loadItems();\n        });\n        this.loadItems();\n    }\n\n    // TODO: Determine how this code is called.  Not being triggered.\n    ionViewDidLoad() {\n        this.loadItems();\n    }\n\n    /* UI Operations */\n\n    loadItems() {\n        this.groceriesService.getItems().subscribe(\n            items => this.items = items,\n            error => this.errorMessage = error as any\n        );\n        return this.items;\n    }\n\n    addItem() {\n        console.log('Adding new item');\n        this.inputDialogServices.presentGroceryItemPrompt();\n    }\n\n    editItem(item, index) {\n        console.log('Editing ', item);\n        this.inputDialogServices.presentGroceryItemPrompt(item, index);\n    }\n\n    shareItem(item) {\n        console.log('Sharing ', item);\n        const msg = 'Grocery Item - Name: ' + item.name + ' - Quantity: ' + item.qty;\n        const subject = 'Shared via Grocery App';\n\n        this.socialSharing.share(msg, subject).then(() => {\n            this.presentToast('Shared sucessfully!');\n        }).catch(() => {\n            this.presentToast('Error while sharing ' + item.name);\n        });\n\n    }\n\n    removeItem(item, index) {\n        console.log('Removing ', item);\n        this.presentToast('Removing item: ' + item.name + ' .... ');\n        this.groceriesService.removeItem(item);\n    }\n\n    async presentToast(msg) {\n        const toast = await this.toastController.create({\n            message: msg,\n            duration: 2000,\n            position: 'top'\n        });\n        toast.present();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GroceriesService {\n\n\n    dataChanged$: Observable<boolean>;\n    private dataChangeSubject: Subject<boolean>;\n\n    // baseUrl = 'http://localhost:8080/api';\n    baseUrl = 'https://grocery-server-dent.herokuapp.com/api';\n\n    constructor(public http: HttpClient) {\n        this.dataChangeSubject = new Subject<boolean>();\n        this.dataChanged$ = this.dataChangeSubject.asObservable();\n    }\n\n    getItems(): Observable<object[]> {\n        return this.http.get<object[]>(this.baseUrl + '/groceries').pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    private handleError(error: Response | any) {\n        let errMsg: string;\n        if (error instanceof Response) {\n            const err = error || '';\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.log(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n    removeItem(item) {\n        this.http.delete(this.baseUrl + '/groceries/' + item._id).subscribe(res => {\n            this.dataChangeSubject.next(true);\n        });\n\n    }\n\n    updateItem(id, newItem) {\n        this.http.put(this.baseUrl + '/groceries/' + id, {name: newItem.name, qty: newItem.qty}).subscribe(res => {\n            this.dataChangeSubject.next(true);\n        });\n    }\n\n    addItem(itemName, quantity) {\n\n        this.http.post(this.baseUrl + '/groceries', {name: itemName, qty: quantity}).subscribe(res => {\n            this.dataChangeSubject.next(true);\n        });\n    }\n}\n","import {Injectable, ViewChild} from '@angular/core';\nimport {AlertController, IonList} from '@ionic/angular';\nimport {GroceriesService} from './groceries.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InputDialogService {\n\n    constructor(public alertController: AlertController,\n                public groceriesService: GroceriesService) {\n    }\n\n    async presentGroceryItemPrompt(item?, index?) {\n        const alert = await this.alertController.create({\n            header: item ? 'Edit Grocery Item' : 'Add Grocery Item',\n            inputs: [\n                {\n                    name: 'itemName',\n                    type: 'text',\n                    placeholder: 'Name',\n                    value: item ? item.name : null\n                },\n                {\n                    name: 'quantity',\n                    type: 'number',\n                    placeholder: 'Quantity',\n                    min: 0,\n                    value: item ? item.qty : null\n                }\n            ],\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel',\n                    cssClass: 'secondary',\n                    handler: () => {\n                        console.log('Confirm Cancel');\n                    }\n                }, {\n                    text: 'Save',\n                    handler: (data) => {\n                        console.log('Confirm Ok');\n                        if (index !== undefined) {\n                            this.groceriesService.updateItem(item._id, {name: data.itemName, qty: data.quantity});\n                        } else {\n                            this.groceriesService.addItem(data.itemName, data.quantity);\n                        }\n                    }\n                }\n            ]\n        });\n\n        await alert.present();\n    }\n\n}\n"],"sourceRoot":""}